$schema: https://json-schema.org/draft/2020-12/schema
$id: https://github.com/dieterich-lab/QutRNA/workflow/schemas/config.yaml
title: QutRNA
description: Config for tRNA mapping and modification discovery
type: object
properties:
  pepfile:
    type: string
    description: Sample description
  parasail:
    type: object
    properties:
      opts:
        type: string
        description: Options for parasail
        default: sw_trace_striped_sat -M 1 -X 1 -e 1 -o 1 -x -d -b 100000
      threads:
        type: integer
        description: Number of threads to reserve for parasail
        default: 1
      lines:
        type: integer
        description: Number of lines to split FASTQ files.
        default: 0
    default: {}
  gpu:
    type: object
    properties:
      pre:
        type: string
        description: BASH code to execute before GPU-assisted alignment
      opts:
        type: string
        description:
        default: --scoring 1,-1,-10,-1 --batchsize 100000
      threads:
        type: integer
        description: Number of threads to reserver for GPU-assisted alignment
        default: 1
  jacusa2:
    type: object
    properties:
      jar:
        type: string
        default: jacusa2
      opts:
        type: string
        default: -m 1 -q 1 -p 1 -D -i -a D,Y -P1 FR-SECONDSTRAND -P2 FR-SECONDSTRAND
      min_cov:
        type: integer
        default: 10
      threads:
        type: integer
        default: 2
    default: {}
  cmalign:
    type: object
    properties:
      opts:
        type: string
        default: --notrunc --nonbanded -g
      threads:
        type: integer
        default: 2
    default: {}
  plot_preprocessed:
    type: boolean
    default: false
  preprocess:
    type: object
    properties:
      samtools:
        type: object
        properties:
          filter:
            type: string
          calmd:
            type: boolean
        default:
          filter: -F 3328
          calmd: true
      read_length:
        type: object
        properties:
          min:
            type: integer
          max:
            type: integer
        default:
          min: 0
          max: 0
      alignment_length:
        type: object
        properties:
          min:
            type: integer
          max:
            type: integer
        default:
          min: 0
          max: 0
      trim_cigar:
        type: boolean
        default: false
      remove_multimappers:
        type: object
        properties:
          keep_uniform_cigar:
            type: boolean
            default: false
      overlap:
        type: object
        properties:
          five_adapter_overlap:
            type: number
          trna_overlap:
            type: number
          three_adapter_overlap:
            type: number
          default:
            five_adapter_overlap: 0
            trna_overlap: 0
            three_adapter_overlap: 0
    default: {}
  params:
    type: object
    properties:
      alignment:
        type: string
        enum: ["parasail", "gpu"]
      precision:
        type: number
        description: Calibrate alignment score offset with precision
      min_aln_score:
        type: integer
        description: Minimum alignment score to considert for calibration
    default:
      alignment: parasail
      precision: 0.99
      min_aln_score: 10
    required:
      - alignment
      - precision
      - min_aln_score
  plots:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        trnas:
          type: string
          enum: ["isoacceptor", "isodecoder", "extended", "all"]
        positions:
          type: array
          items:
            type: string
        opts:
          type: string
      required:
        - id
        - trnas
  samtools:
    type: object
    properties:
      threads:
        type: integer
        default: 2
    default: {}
  include:
    type: object
    properties:
      ref_fasta:
        type: string
        enum: ["link", "copy"]
        default: link
      cm:
        type: string
        enum: ["link", "copy"]
        default: copy
      mods:
        type: object
        properties:
          file:
            type: string
            enum: ["link", "copy"]
            default: copy
          abbrevs:
            type: string
            enum: ["link", "copy"]
            default: copy
        default: {}
      fastq:
        type: string
        enum: ["link", "copy"]
        default: link
      bam:
        type: string
        enum: ["link", "copy"]
        default: link
    default: {}
required:
  - pepfile
