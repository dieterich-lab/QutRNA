# TODO remove
#import shutil
#import subprocess
#import yaml
#
#import numpy as np
#import pandas as pd

from snakemake.utils import validate


VERSION = "2.0.0-DEV-5"


# validate schemas
validate(config, "schemas/config.yaml")
pepfile: config["pepfile"]
pepschema: "schemas/pep.yaml"


# TODO  --set-resources parasail_gpu_assisted:slurm_extra="'-p gpu' '--gres=gpu:pascal:1'"


# manage snakemake includes
include: "rules/common.smk"
include: "rules/filter.smk"
include: "rules/samtools.smk"
include: "rules/parasail.smk"
include: "rules/jacusa2.smk"
include: "rules/sec_structure.smk"
include: "rules/plot.smk"
include: "rules/info.smk"


global FILTERS_APPLIED
global TBL
global READS


def target_alignment():
  tbl = TBL.set_index("condition")
  targets = []
  for row in tbl.itertuples():
    targets.extend(
        expand("results/plots/alignment/sample~{sample}/subsample~{subsample}/{bc}_score.pdf",
               sample=row.sample_name,
               subsample=row.subsample_name,
               bc=row.base_calling))

  return targets


def target_sprinzl():
  return ["results/seq_to_sprinzl_filtered.tsv", ]


def target_trna_plots():
  targets = []

  bam_types = ["final",]
  if config["plot_preprocessed"] and FILTERS_APPLIED:
    bam_types += FILTERS_APPLIED

  for conds in pep.config["qutrna"]["contrasts"]:
    cond1 = conds["cond1"]
    cond2 = conds["cond2"]

    dname =  "results/plots/cond1~{cond1}/cond2~{cond2}/{plot_id}/bams~{bam_type}"

    for plot in config["plots"]:
      targets.append(
          expand(dname,
                 cond1=cond1, cond2=cond2,
                 plot_id=plot["id"], bam_type=bam_types))

  return targets


def target_all():
  targets = []
  targets.extend(target_trna_plots())

  if READS == "fastq":
    targets.extend(target_alignment())

  return targets


def target_read_plots():
  targets = [
      "results/plots/read_counts.pdf",
      "results/plots/read_length.pdf"
  ]

  return targets


def target_info():
  targets = [
      "info/config.yaml",
      "info/pep.yaml",
      "info/version.txt",
      "info/opts.txt"]

  if workflow.configfiles:
    targets += [os.path.join("info/configfiles", f"{i}_{os.path.basename(cf)}") for i, cf in enumerate(workflow.configfiles, start=1)]

  return targets

# possible targets for snakemake

rule all:
  input: target_all() + target_info() + target_read_plots()


rule alignment:
  input: target_alignment() + target_info() + target_read_plots()


rule sprinzl:
  input: target_sprinzl() + target_info()


rule trna_plots:
  input: target_trna_plots() + target_info()


rule read_count_plots:
  input: target_read_plots() + target_info()


rule info:
  input: target_info()
